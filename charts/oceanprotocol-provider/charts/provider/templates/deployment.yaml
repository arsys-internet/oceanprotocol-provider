apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-provider
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-provider
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-provider
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-provider
    spec:
      containers:
        - name: {{ .Release.Name }}-provider
          image: {{ .Values.image.repository | default "oceanprotocol/provider-py" }}:{{ .Values.image.tag | default "latest" }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" | quote }}
          env:
            - name: LOG_LEVEL
              value: DEBUG
            - name: ARTIFACTS_PATH
              value: "/ocean-provider/artifacts"
            - name: NETWORK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-networks
                  key: URL
            - name: PROVIDER_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-networks
                  key: allowedProviders
            - name: PROVIDER_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-networks
                  key: privateProviders
            - name: UNIVERSAL_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-networks
                  key: privateOperator
            - name: AUTHORIZED_DECRYPTERS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-networks
                  key: authorizedDecrypters
            - name: OCEAN_PROVIDER_URL
              value: "http://0.0.0.0:8030"
            - name: OCEAN_PROVIDER_WORKERS
              value: "1"
            - name: OCEAN_PROVIDER_TIMEOUT
              value: "9000"
            - name: OPERATOR_SERVICE_URL
              value: {{ .Values.operatorAPI | default ( printf "http://%s-operator-service.%s:8050" .Release.Name .Release.Namespace ) | quote }}
            - name: IPFS_GATEWAY
              value: {{ .Values.ipfsGateway | default ( printf "http://%s-ipfs.%s" .Release.Name .Release.Namespace ) | quote }}
            - name: REQUEST_TIMEOUT
              value: "10"
            - name: AQUARIUS_URL
              value: {{ .Values.aquariusURL | required "The aquarius URL it's a mandatory value" | quote }}
            - name: PROVIDER_FEE_TOKEN
              value: {{ .Values.providerFeeToken | required "The provider fee token it's a mandatory value" | quote }}
          ports:
            - containerPort: 8030
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 700Mi
            requests:
              cpu: 500m
              memory: 700Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
