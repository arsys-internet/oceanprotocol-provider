apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-operator-service
  name: {{ .Release.Name }}-operator-service
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-operator-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-operator-service
    spec:
      containers:
      - name: {{ .Release.Name }}-operator-service
        image: {{ .Values.image.repository | default "oceanprotocol/operator-service" }}:{{ .Values.image.tag | default "v4main" }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ end }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" | quote }}
        env:
        - name: ALGO_POD_TIMEOUT
          value: "3600"
        - name: STORAGE_EXPIRY
          value: "0"
        - name: SIGNATURE_REQUIRED
          value: "0"
        - name: DEFAULT_NAMESPACE
          value: {{ .Release.Namespace | quote }}
        - name: OPERATOR_ADDRESS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-networks
              key: publicOperator
        - name: ALLOWED_PROVIDERS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-networks
              key: allowedProviders
        - name: ALLOWED_ADMINS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-networks
              key: allowedAdmins
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres
              key: POSTGRES_PORT
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

